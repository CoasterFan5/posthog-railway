# Yay
services:
  pg:
    image: ghcr.io/railwayapp-templates/postgres-ssl:16
    restart: always
    env_file: ./.env.test
    ports:
      - "5432:5432"

  redis:
    image: bitnami/redis:7.2.5
    restart: always
    env_file: ./.env.test
    ports:
      - "6379:6379"

  clickhouse:
    image: ghcr.io/coasterfan5/posthog-railway-clickhouse:main
    env_file: ./.env.test
    ports:
      - "9000:9000"

  zookeeper:
    image: zookeeper:3.7.0
    env_file: ./.env.test
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-datalog:/datalog
      - zookeeper-data:/data
      - zookeeper-logs:/logs

  kafka:
    image: ghcr.io/posthog/kafka-container:v2.8.2
    env_file: ./.env.test
    restart: on-failure
    depends_on:
      - zookeeper
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: kafka-cluster.sh cluster-id --bootstrap-server localhost:9092 || exit 1
      interval: 3s
      timeout: 10s
      retries: 10

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    env_file: ./.env.test
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKER_ID: 1001

  web:
    image: "ghcr.io/posthog/posthog:86d6812c7de75c6c869b935e17baf45bf295bfd5"
    env_file: ./.env.test

  caddy:
    image: ghcr.io/coasterfan5/posthog-railway-caddy:main
    env_file: ./.env.test
    ports:
      - "9999:8000"

volumes:
  zookeeper-data:
  zookeeper-datalog:
  zookeeper-logs:
  objectstorage:
  postgres-data:
  clickhouse-data:
  caddy-data:
  caddy-config:
  redis-data:
  redis7-data:
  kafka-data:
